---
# Play1
- name: Generate the SSL certificate and private key
  hosts: ansible-controller
  
  vars_files:
    - ssl_vars.yaml

  tasks:
  - name: Generate private key
    ansible.builtin.openssl_privatekey:
      path: "{{ path_to_cert }}{{ cert_name }}.key"
      size: 2048
  - name: Generate CSR
    ansible.builtin.openssl_csr:
      path: "{{ path_to_cert }}{{ cert_name }}.csr"
      privatekey_path: "{{ path_to_cert }}{{ cert_name }}.key"
  - name: Generate SSL certificate
    ansible.builtin.openssl_certificate:
      provider: selfsigned
      path: "{{ path_to_cert }}{{ cert_name }}.crt"
      privatekey_path: "{{ path_to_cert }}{{ cert_name }}.key"
      csr_path: "{{ path_to_cert }}{{ cert_name }}.csr"


# Play 2
- name: Configure webserver with nginx
  hosts: web
  become: true
  
  vars_files:
    - nginx_vars.yaml

  handlers:
  - ansible.builtin.import_tasks: handlers.yaml

  tasks:
  - name: Ensure that nginx is installed
    ansible.builtin.package:
      name: nginx
      state: latest
      update_cache: true

  - name: Create directory for TLS certificates
    ansible.builtin.file:
      path: "{{ tls_dir }}"
      state: directory
      mode: '0750'

  - name: Copy TLS files
    ansible.builtin.copy:
      src: "{{ item }}"
      dest: "{{ tls_dir }}"
      mode: '0600'
    loop:
      - "{{ key_file }}"
      - "{{ cert_file }}"
    notify: Restart nginx

  - name: Create nginx config file
    ansible.builtin.template:
      src: nginx.config.j2
      dest: "{{ conf_file }}"
      mode: '0644'
    notify: Restart nginx

  - name: Enable configuration
    ansible.builtin.file:
      src: "{{ conf_file }}"
      dest: /etc/nginx/sites-enabled/default
      state: link

  - name: Create index.html
    ansible.builtin.template:
      src: index.html.j2
      dest: /usr/share/nginx/html/index.html
      mode: '0644'

# Play 3 Add the users to the web server
- name: Add users to web servers
  hosts: web
  become: true
  tasks:
  - ansible.builtin.import_tasks: users_task.yaml
    vars:
      admin_group: adm

# Play4
- name: Disable and remove packages NTP and PostgreSQL
  hosts: web
  become: true

  tasks:
  - ansible.builtin.import_tasks: services_task.yaml

# Import playbook for hostname
- ansible.builtin.import_playbook: hostname_playbook.yaml
...